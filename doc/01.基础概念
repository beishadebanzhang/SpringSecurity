基础概念:
    认证: 判断一个用户, 身份是否合法, 合法才可以访问系统资源
    会话:
        系统为了保持当前用户的登录状态所提供的机制, 包括基于session、token的方式
        基于session的认证方式: (对分布式支持较差)
            服务端生成用户相关数据保存在session中, 发送给客户端的session_id存放在cookie中
            客户端请求时带上session_id就可以验证服务端是否存在session数据, 以此校验用户合法性
            当用户退出登录或者session过期时, 客户端的session_id也就无效了
        基于token的认证方式:
            用户认证成功后, 服务端生成一个token发给客户端, 客户端可以放到cookie或localStorage中存储
            每次请求时带上token, 服务端收到token通过验证后即可确认用户身份
    授权:
        更细粒度的对隐私数据进行划分, 授权在认证通过后发生, 控制不同的用户能够访问不同的资源
        数据模型: Subject 主体 -- Permission 权限/许可 -- Resource 资源
        表设计:
            用户、角色、用户角色关系、权限、角色权限关系、资源、资源权限关系 --> 资源和权限可合并
        RBAC:
            基于角色的访问控制：需要修改角色权限时需要修改代码
            基于资源的访问控制：直接修改角色的权限关系表即可